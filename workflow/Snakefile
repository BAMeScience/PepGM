
#configuration
WorkflowPath = os.path.dirname(os.path.realpath(workflow.snakefile))
include: WorkflowPath +'/snakefiles/config.snakefile'
include : WorkflowPath + '/snakefiles/searchgui+pepshaker.snakefile'
#include: WorkflowPath + '/snakefiles/pepGM.snakefile'



#wildcard_constraints:
#     hostname = '[a-zA-Z]',
#     DBname = '[a-zA-Z]',
#     samplename = '[a-zA-Z]'

#need to install mono for this to work
#rule ConvertSpectratoMGF:
#     input:'{samplename}.raw' or '{samplename}.mzml'
#     output:'{samplename}.mgf'
#     shell:

rule all:
     input:
          expand(DataDirectory + SampleName + '/' + HostName + '_' + ReferenceDBName +'_PepGM_Results_{alpha}_{beta}.png',alpha = AlphaRange, beta = BetaRange)
          #DataDirectory + SampleName + '/' + firstTarget +'_proteinCount.png'


rule CreateFactorGraph:
     input: DataDirectory +'{samplename}/{hostname}_{DBname}_Default_PSM_Report.txt'
     output: DataDirectory +'{samplename}/{hostname}_{DBname}_PepGM_graph.graphml'
     conda: 'envs/graphenv.yml'
     params:
          samplename = SampleName,
          hostname = HostName,
          DBname = ReferenceDBName,
          targetTaxa = TargetTaxa,
          firstTarget = firstTarget
     shell: 'python3 workflow/scripts/CreatePepGMGraph.py --targetTaxa {params.targetTaxa} --PSM_Report {input} --PeptideMapPath '+DataDirectory+'{params.samplename}/{params.firstTarget}.json --out {output}'

rule RunPepGM:
     input: DataDirectory +'{samplename}/{hostname}_{DBname}_PepGM_graph.graphml'
     output: DataDirectory +'{samplename}/{hostname}_{DBname}_PepGM_Results_{alpha}_{beta}.csv'
     conda: 'envs/graphenv.yml'
     params:
          samplename = SampleName,
          hostname = HostName,
          DBname = ReferenceDBName,
          targetTaxa = TargetTaxa,
          firstTarget = firstTarget
     shell: 'python3  workflow/scripts/PepGM.py --GraphMLPath {input} --alpha {wildcards.alpha} --beta {wildcards.beta} --out {output}'

rule BarPlotResults:
     input: DataDirectory +'{samplename}/{hostname}_{DBname}_PepGM_Results_{alpha}_{beta}.csv'
     output: DataDirectory +'{samplename}/{hostname}_{DBname}_PepGM_Results_{alpha}_{beta}.png'
     conda: 'envs/graphenv.yml'
     params: NumberofResults = TaxaInPlot
     shell: 'python3 workflow/scripts/BarPlotResults.py --ResultsFile {input} --NumberofResults {params.NumberofResults} --out {output}'

#rules only needed for debugging/checking results
rule CountProteinsInJson:
     input: DataDirectory +'{samplename}/{taxonname}.json'
     output : DataDirectory + '{samplename}/{taxonname}_proteinCount.png'
     params : NumberofResults = TaxaInProteinCount
     conda: 'envs/graphenv.yml'
     shell: 'python3 workflow/scripts/CountProteins.py --ResultsFile {input} --NumberofResults {params.NumberofResults} --out {output}'
     


     