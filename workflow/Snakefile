
#configuration
WorkflowPath = os.path.dirname(os.path.realpath(workflow.snakefile))
include: WorkflowPath +'/rules/config.smk'
#include : WorkflowPath + '/rules/CurateDatabase.smk'
#include : WorkflowPath + '/rules/buildDatabase.smk'
include : WorkflowPath + '/rules/filterHostCrap.smk'
#include : WorkflowPath + '/rules/XTandem.smk'
#include : WorkflowPath + '/rules/MS2Rescore.smk'
include: WorkflowPath + '/rules/ParsePouttoUnipept.smk'
include: WorkflowPath + '/rules/searchgui+pepshaker.smk'


rule all:
     input:
          expand(ResultsDir +'Prior{Prior}/'+ReferenceDBName +'_PepGM_Results_a{alpha}_b{beta}_p{Prior}.png',alpha = AlphaRange, beta = BetaRange, Prior = prior),
          ResultsDir +'paramcheck.png',

rule CreateFactorGraph:
     input: ResultsDir + 'GraphDataframe.csv'
     output: ResultsDir +'{DBname}_PepGM_graph.graphml'
     conda: 'envs/graphenv.yml'
     params:
          samplename = SampleName,
          hostname = HostName,
          DBname = ReferenceDBName,
          ResultsDir = ResultsDir
     log: ResultsDir +'{DBname}.log'
     shell: 'python3 workflow/scripts/CreatePepGMGraph.py --UnipeptCSV {input} --out {output} &>> {log}'


rule RunPepGM:
     input: ResultsDir +'{DBname}_PepGM_graph.graphml'
     output: ResultsDir +'Prior{Prior}/{DBname}_PepGM_Results_a{alpha}_b{beta}_p{Prior}.csv'
     conda: 'envs/graphenv.yml'
     params:
          samplename = SampleName,
          hostname = HostName,
          DBname = ReferenceDBName,
     log : ResultsDir +'Prior{Prior}/log/{DBname}_a{alpha}_b{beta}_pepGM.log'
     shell: 'python3  workflow/scripts/PepGM.py --GraphMLPath {input} --prior {wildcards.Prior} --alpha {wildcards.alpha} --beta {wildcards.beta} --out {output} &>> {log}'


rule BarPlotResults:
     input: ResultsDir +'Prior{Prior}/{DBname}_PepGM_Results_a{alpha}_b{beta}_p{Prior}.csv'
     output:  ResultsDir +'Prior{Prior}/{DBname}_PepGM_Results_a{alpha}_b{beta}_p{Prior}.png',
     conda: 'envs/graphenv.yml'
     params: NumberofResults = TaxaInPlot,
             host = ScientificHostName
     log : ResultsDir + 'Prior{Prior}/log/{DBname}_a{alpha}_b{beta}.log'
     shell: 'python3 workflow/scripts/BarPlotResults.py --host {params.host} --ResultsFile {input} --NumberofResults {params.NumberofResults} --out {output} &>> {log}'


rule FindBestParameters:
     input: ResultsDir + 'GraphDataframe.csv',
            expand(ResultsDir + 'Prior{Prior}/'+ ReferenceDBName +'_PepGM_Results_a{alpha}_b{beta}_p{Prior}.png',alpha = AlphaRange, beta = BetaRange, Prior = prior)
     output: ResultsDir +'paramcheck.png', 
             ResultsDir +'PhyloTreeView.png'
     conda: 'envs/graphenv.yml'
     log : ResultsDir +'paramcheck.log'
     params: Results = ResultsDir,
             host = ScientificHostName,
             DB = ReferenceDBName
     shell: 'python3 workflow/scripts/SearchAnalysisOutputFormatter.py --weights {input[0]} --reference_db {params.DB} --host {params.host} --resultsfolder {params.Results} --out {output[0]} &>> {log}'



